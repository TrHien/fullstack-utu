{"version":3,"sources":["components/Form.js","components/Reminder.js","components/Reminders.js","App.js","index.js"],"names":["Form","addReminder","valueName","handleNameChange","valueTime","handleTimeChange","onSubmit","value","onChange","type","Reminder","props","Date","data","timestamp","toLocaleString","name","onClick","deleteReminder","id","Reminders","reminders","map","item","App","event","preventDefault","newObject","state","newName","newTime","some","reminder","alert","axios","post","then","response","setState","concat","target","delete","filter","n","catch","error","get","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmCeA,EAjCF,SAAC,GAMP,IALLC,EAKI,EALJA,YACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,UACAC,EACI,EADJA,iBAEA,OACE,uBAAMC,SAAUL,EAAhB,UACE,kDACA,8BACE,sCAEE,uBAAOM,MAAOL,EAAWM,SAAUL,SAIvC,8BACE,8BACE,0EACA,uBAFF,QAIE,uBAAOI,MAAOH,EAAWI,SAAUH,SAIvC,8BACE,wBAAQI,KAAK,SAAb,uBClBOC,EATE,SAACC,GAChB,OACE,+BACG,IAAIC,KAAKD,EAAME,KAAKC,WAAWC,iBADlC,IACqDJ,EAAME,KAAKG,KAAM,IACpE,wBAAQC,QAASN,EAAMO,eAAeP,EAAME,KAAKM,IAAjD,wBCWSC,EAdG,SAACT,GACjB,OACE,6BACGA,EAAMU,UAAUC,KAAI,SAACC,GAAD,OACnB,cAAC,EAAD,CAEEV,KAAMU,EACNL,eAAgBP,EAAMO,gBAFjBK,EAAKJ,U,gBC2FLK,E,kDA7Fb,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IAmBRV,YAAc,SAACwB,GACbA,EAAMC,iBAEN,IAAMC,EAAY,CAChBX,KAAM,EAAKY,MAAMC,QACjBf,UAAW,EAAKc,MAAME,SAItB,EAAKF,MAAMP,UAAUU,MAAK,SAACC,GAAD,OAAcA,EAAShB,OAASW,EAAUX,QAEpEiB,MAAM,GAAD,OAAIN,EAAUX,KAAd,kDAELkB,IAAMC,KAAK,iBAAkBR,GAAWS,MAAK,SAACC,GAC5C,EAAKC,SAAS,CACZjB,UAAW,EAAKO,MAAMP,UAAUkB,OAAOF,EAASxB,MAChDgB,QAAS,GACTC,QAAS,SArCE,EA2CnB3B,iBAAmB,SAACsB,GAClB,EAAKa,SAAS,CAAET,QAASJ,EAAMe,OAAOjC,SA5CrB,EA+CnBF,iBAAmB,SAACoB,GAClB,EAAKa,SAAS,CAAER,QAASL,EAAMe,OAAOjC,SAhDrB,EAmDnBW,eAAiB,SAACC,GAChB,OAAO,WACLe,IACGO,OADH,yBAC4BtB,IACzBiB,MAAK,SAACC,GACL,IAAMhB,EAAY,EAAKO,MAAMP,UAAUqB,QAAO,SAACC,GAAD,OAAOA,EAAExB,KAAOA,KAC9D,EAAKmB,SAAS,CACZjB,UAAWA,OAGduB,OAAM,SAACC,GACNZ,MAAM,8DA5DZ,EAAKL,MAAQ,CACXP,UAAW,CACT,CACEL,KAAM,GACNF,UAAW,KAGfe,QAAS,GACTC,QAAS,IAVM,E,qDAcnB,WAAqB,IAAD,OAClBI,IAAMY,IAAI,kBAAkBV,MAAK,SAACC,GAChC,EAAKC,SAAS,CAAEjB,UAAWgB,EAASxB,Y,oBAmDxC,WACE,OACE,gCACE,+CACA,8BAEI,cAAC,EAAD,CACEZ,YAAa8C,KAAK9C,YAClBC,UAAW6C,KAAKnB,MAAMC,QACtB1B,iBAAkB4C,KAAK5C,iBACvBC,UAAW2C,KAAKnB,MAAME,QACtBzB,iBAAkB0C,KAAK1C,qBAK7B,2CACA,cAAC,EAAD,CACEgB,UAAW0B,KAAKnB,MAAMP,UACtBH,eAAgB6B,KAAK7B,wB,GAvFb8B,IAAMC,W,eCDxBC,EAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.40923e63.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({\r\n  addReminder,\r\n  valueName,\r\n  handleNameChange,\r\n  valueTime,\r\n  handleTimeChange,\r\n}) => {\r\n  return (\r\n    <form onSubmit={addReminder}>\r\n      <h3>Add new reminder</h3>\r\n      <div>\r\n        <p>\r\n          Name:\r\n          <input value={valueName} onChange={handleNameChange} />\r\n        </p>\r\n      </div>\r\n\r\n      <div>\r\n        <p>\r\n          <i>Use date format: yyyy-mm-ddThh:mm:00.000Z</i>\r\n          <br />\r\n          Date:\r\n          <input value={valueTime} onChange={handleTimeChange} />\r\n        </p>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Reminder = (props) => {\r\n  return (\r\n    <li>\r\n      {new Date(props.data.timestamp).toLocaleString()} {props.data.name}{' '}\r\n      <button onClick={props.deleteReminder(props.data.id)}>Delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Reminder\r\n","import React from 'react'\r\nimport Reminder from './Reminder'\r\n\r\nconst Reminders = (props) => {\r\n  return (\r\n    <ul>\r\n      {props.reminders.map((item) => (\r\n        <Reminder\r\n          key={item.id}\r\n          data={item}\r\n          deleteReminder={props.deleteReminder}\r\n        />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Reminders\r\n","import Form from './components/Form.js'\r\nimport React from 'react'\r\nimport Reminders from './components/Reminders.js'\r\nimport axios from 'axios'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      reminders: [\r\n        {\r\n          name: '',\r\n          timestamp: '',\r\n        },\r\n      ],\r\n      newName: '',\r\n      newTime: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('/api/reminders').then((response) => {\r\n      this.setState({ reminders: response.data })\r\n    })\r\n  }\r\n\r\n  addReminder = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newObject = {\r\n      name: this.state.newName,\r\n      timestamp: this.state.newTime,\r\n    }\r\n\r\n    if (\r\n      this.state.reminders.some((reminder) => reminder.name === newObject.name)\r\n    ) {\r\n      alert(`${newObject.name} - Not added. Reminder is already on the list`)\r\n    } else {\r\n      axios.post('/api/reminders', newObject).then((response) => {\r\n        this.setState({\r\n          reminders: this.state.reminders.concat(response.data),\r\n          newName: '',\r\n          newTime: '',\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({ newName: event.target.value })\r\n  }\r\n\r\n  handleTimeChange = (event) => {\r\n    this.setState({ newTime: event.target.value })\r\n  }\r\n\r\n  deleteReminder = (id) => {\r\n    return () => {\r\n      axios\r\n        .delete(`/api/reminders/${id}`)\r\n        .then((response) => {\r\n          const reminders = this.state.reminders.filter((n) => n.id !== id)\r\n          this.setState({\r\n            reminders: reminders,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          alert(`The reminder has already been deleted from the server`)\r\n        })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Reminders App</h2>\r\n        <div>\r\n          {\r\n            <Form\r\n              addReminder={this.addReminder}\r\n              valueName={this.state.newName}\r\n              handleNameChange={this.handleNameChange}\r\n              valueTime={this.state.newTime}\r\n              handleTimeChange={this.handleTimeChange}\r\n            />\r\n          }\r\n        </div>\r\n\r\n        <h3>Reminders</h3>\r\n        <Reminders\r\n          reminders={this.state.reminders}\r\n          deleteReminder={this.deleteReminder}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import App from './App'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}